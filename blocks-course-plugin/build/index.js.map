{"version":3,"file":"index.js","mappings":"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","sources":["webpack://boilerplate-2/./src/filters/index.js","webpack://boilerplate-2/./src/format-types/highlight.js","webpack://boilerplate-2/./src/plugins/sidebar.js","webpack://boilerplate-2/./src/todos-store/actions.js","webpack://boilerplate-2/./src/todos-store/controls.js","webpack://boilerplate-2/./src/todos-store/index.js","webpack://boilerplate-2/./src/todos-store/reducer.js","webpack://boilerplate-2/./src/todos-store/resolvers.js","webpack://boilerplate-2/./src/todos-store/selectors.js","webpack://boilerplate-2/./src/todos-store/types.js","webpack://boilerplate-2/external window [\"wp\",\"blockEditor\"]","webpack://boilerplate-2/external window [\"wp\",\"blocks\"]","webpack://boilerplate-2/external window [\"wp\",\"components\"]","webpack://boilerplate-2/external window [\"wp\",\"data\"]","webpack://boilerplate-2/external window [\"wp\",\"domReady\"]","webpack://boilerplate-2/external window [\"wp\",\"editPost\"]","webpack://boilerplate-2/external window [\"wp\",\"element\"]","webpack://boilerplate-2/external window [\"wp\",\"hooks\"]","webpack://boilerplate-2/external window [\"wp\",\"i18n\"]","webpack://boilerplate-2/external window [\"wp\",\"plugins\"]","webpack://boilerplate-2/external window [\"wp\",\"richText\"]","webpack://boilerplate-2/webpack/bootstrap","webpack://boilerplate-2/webpack/runtime/compat get default export","webpack://boilerplate-2/webpack/runtime/define property getters","webpack://boilerplate-2/webpack/runtime/hasOwnProperty shorthand","webpack://boilerplate-2/webpack/runtime/make namespace object","webpack://boilerplate-2/./src/index.js"],"sourcesContent":["import { addFilter } from '@wordpress/hooks';\r\nimport { InspectorControls } from '@wordpress/block-editor';\r\nimport { PanelBody } from '@wordpress/components';\r\nimport { unregisterBlockType } from '@wordpress/blocks';\r\nimport domReady from '@wordpress/dom-ready';\r\n\r\n\r\n//This file was imported into src/index.js\r\n\r\n//In the PHP filters, we can only access the items in block.json. In the JS one though, we can also access things in the index.js file's registerBlockType function. (including the edit and save functions.)\r\n\r\n\r\nconst changeParagraphIcon = (settings, name) => {\r\n\tif (name === 'core/paragraph') {\r\n\t\treturn { ...settings, icon: 'twitter' };\r\n        //The icon is from block.json (it's the icon that shows up in the editor blocks search panel.)\r\n\t}\r\n\treturn settings;\r\n};\r\n\r\n//To call the filter:\r\n//The second argument is the namespace/ a name you make up. \r\n//The third is your function.\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'block-course/change-paragraph-icon',\r\n\tchangeParagraphIcon\r\n);\r\n\r\n//This receives the edit component that already exists, BlockEdit. -- It modifies the edit component of all blocks.\r\nconst modifyEdit = (BlockEdit) => {\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<BlockEdit {...props} />\r\n\t\t\t\t<InspectorControls>\r\n\t\t\t\t\t<PanelBody>Custom Panel</PanelBody>\r\n\t\t\t\t</InspectorControls>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n};\r\n\r\naddFilter('editor.BlockEdit', 'block-course/change-edit', modifyEdit);\r\n\r\n\r\n//This unregisters a block. You need to make sure the dom is already ready before running it.\r\ndomReady(() => {\r\n\tunregisterBlockType('core/paragraph');\r\n});","import { registerFormatType, toggleFormat } from '@wordpress/rich-text';\r\nimport { RichTextToolbarButton } from '@wordpress/block-editor';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n// Imported this file into index.js.\r\n\r\n// When we type in text in a paragraph element or something, this file is going to allow us to highlight a portion of that text, and then have a menu of new options for styling that text. In this case, we only added a second Highlight option which only adds the yellow background color (note that you have to click the down arrow < angular bracket to see the option we added.)\r\n\r\nconst HighlightFormatButton = ({ isActive, value, onChange }) => {\r\n\treturn (\r\n\t\t<RichTextToolbarButton\r\n\t\t\ticon=\"edit\"\r\n\t\t\ttitle={__('Highlight', 'blocks-course')}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tonChange(\r\n\t\t\t\t\ttoggleFormat(value, {\r\n\t\t\t\t\t\ttype: 'block-course/highlight',\r\n\t\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\t\tstyle: 'background-color: #f0ff00',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\tisActive={isActive}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n\r\nregisterFormatType('block-course/highlight', {\r\n\ttitle: __('Highlight', 'blocks-course'),\r\n\ttagName: 'span',\r\n    // the tagname is what wraps the text that we selected (that we highlighted and are going to style differently from the rest of the text, such as in something like a paragraph element):\r\n\tclassName: null, //we are going to use inline styling above to style the span instead of adding a classname, but that's also an option.\r\n\tedit: HighlightFormatButton, //edit is the component that is going to appear near the hover toolbar when you are in a paragraph or some text element and are selecting a portion of the text.\r\n});\r\n\r\n//After selecting some text, click the down arrow in the hover toolbar, and selecting the highlight function, the HTMl looks like so:\r\n//<p>testing this <span style=\"background-color: #f0ff00\">out</span></p>","import { registerPlugin } from '@wordpress/plugins';\r\nimport { PluginSidebar } from '@wordpress/edit-post';\r\nimport { PanelBody, TextControl } from '@wordpress/components';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nconst MetaFieldsInputs = () => {\r\n    // This pulls in the metabox field data that we added in metabox.php:\r\n\tconst subtitleValue = useSelect((select) => {\r\n\t\treturn select('core/editor').getEditedPostAttribute('meta')\r\n\t\t\t._blocks_course_post_subtitle;\r\n\t});\r\n\tconst { editPost } = useDispatch('core/editor'); // pulls out the editPost method from the core/editor store.\r\n\treturn (\r\n\t\t<PanelBody title={__('Subtitle Options', 'blocks-course')}>\r\n\t\t\t<TextControl\r\n\t\t\t\tlabel={__('Subtitle', 'blocks-course')}\r\n\t\t\t\tvalue={subtitleValue}\r\n\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\teditPost({\r\n\t\t\t\t\t\tmeta: { _blocks_course_post_subtitle: value },\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</PanelBody>\r\n\t);\r\n};\r\n\r\nregisterPlugin('blocks-course-plugin', {\r\n\trender: () => {\r\n\t\treturn (\r\n\t\t\t<PluginSidebar\r\n\t\t\t\tname=\"meta-fields-sidebar\"\r\n\t\t\t\ticon=\"admin-settings\"\r\n\t\t\t\ttitle={__('Post Options', 'blocks-course')}\r\n\t\t\t>\r\n\t\t\t\t<MetaFieldsInputs />\r\n\t\t\t</PluginSidebar>\r\n\t\t);\r\n\t},\r\n});","import { dispatch } from '@wordpress/data';\r\nimport { ADD_TODO, POPULATE_TODOS, UPDATE_TODO } from './types';\r\nimport { createTodo, toggleTodo as toggleTodoControl } from './controls';//we re-name the function becuase we already have one with the same name in the file.\r\n\r\n// The action is an object which has a type and any other arguments you need. So here, we need to pass in the todo parameter.\r\n// Note that arrow functions can't be generator functions, which is why this was converted back to a normal function:\r\nexport function* addTodo(title) {\r\n\ttry {\r\n\t\tconst todo = yield createTodo(title);\r\n\t\treturn {\r\n\t\t\ttype: ADD_TODO,\r\n\t\t\ttodo,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn dispatch('core/notices').createErrorNotice(\r\n\t\t\terror.message || 'Could not create todo.'\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport function* toggleTodo(todo, index) {\r\n\ttry {\r\n\t\t// Loading is so we can disable the checkbox while we are waiting for the update:\r\n\t\tyield updateTodo({ ...todo, loading: true }, index);\r\n\t\tconst updatedTodo = yield toggleTodoControl(todo);\r\n\t\treturn updateTodo(updatedTodo, index);\r\n\t} catch (error) {\r\n\t\treturn dispatch('core/notices').createErrorNotice(\r\n\t\t\terror.message || 'Could not update todo.'\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const updateTodo = (todo, index) => {\r\n\treturn {\r\n\t\ttype: UPDATE_TODO,\r\n\t\tindex,\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nexport const populateTodos = (todos) => {\r\n\treturn {\r\n\t\ttype: POPULATE_TODOS,\r\n\t\ttodos,\r\n\t};\r\n};","import { FETCH_TODOS, CREATE_TODO, TOGGLE_TODO } from './types';\r\n\r\n//Controls are another type of action. Instead of updating the state directly, they can dispatch API requests.\r\n\r\n// This is a control action creator. (Which returns an object that at minimum returns the type.):\r\nexport const fetchTodos = () => {\r\n\treturn {\r\n\t\ttype: FETCH_TODOS,\r\n\t};\r\n};\r\n\r\nexport const createTodo = (title) => {\r\n\treturn {\r\n\t\ttype: CREATE_TODO,\r\n\t\ttitle,\r\n\t};\r\n}\r\n\r\nexport const toggleTodo = (todo) => {\r\n\treturn {\r\n\t\ttype: TOGGLE_TODO,\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\n// Control functions are run whenever we dispatch the control action. Each key should correspond to the action type.\r\nexport default {\r\n\tFETCH_TODOS() {\r\n\t\treturn window\r\n\t\t\t.fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t}\r\n\t\t\t\t// The default behavior of fetch would return the error in the try block (of our function in resolvers.js) instead of the catch block... so we have to manually set it up to throw an Error.\r\n\t\t\t\tthrow new Error('Could not fetch todos');\r\n\t\t\t});\r\n\t},\r\n\t// Most of this code comes from the Creating a Resource section of the API we are using -- we get the object parameter from the action creator:\r\n\tCREATE_TODO({ title }) {\r\n\t\treturn window\r\n\t\t\t.fetch('https://jsonplaceholder.typicode.com/todos', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tcompleted: false,\r\n\t\t\t\t\tuserId: 1,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Could not create todo.');\r\n\t\t\t});\r\n\t},\r\n\t// This is a patch request, mostly copied from the API docs. It will modify the completed option. (Which controls whether the checkbox is selected or not.)\r\n\tTOGGLE_TODO({ todo }) {\r\n\t\treturn window\r\n\t\t\t.fetch(`https://jsonplaceholder.typicode.com/todos/${todo.id}`, {\r\n\t\t\t\tmethod: 'PATCH',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t// We set it to the opposite of what it currently is:\r\n\t\t\t\t\tcompleted: !todo.completed,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Could not update todo.');\r\n\t\t\t});\r\n\t},\r\n};\r\n","import { createReduxStore, register } from '@wordpress/data'; // To register a new store, you have to install the @wordpress/data package.\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\nimport * as resolvers from './resolvers';\r\nimport controls from './controls';\r\n\r\nconst store = createReduxStore('blocks-course/todos', {\r\n\treducer, // this is technically reducer: reducer - reducers are used to change the state of something in our store. It receives the old state and an action, and then returns the new state.\r\n\tselectors, // the selector is used to pull data from the store.\r\n\tactions, // the action is used to generate an action object, which is passed to the reducer, to perform a function.\r\n\tresolvers, //Selectors shouldn't call an API or have any side effects. So we are going to use resolvers in addition to the selector function.\r\n\tcontrols, //To send an API request in a resolver, we need to create controls.\r\n});\r\n\r\nregister(store);","import { ADD_TODO, POPULATE_TODOS, UPDATE_TODO } from './types';\r\n\r\n// It's best to start as an object in case you have to add additional items to the store later (as in that case, you can just add a new key/value pair.)\r\nconst DEFAULT_STATE = {\r\n\titems: [],\r\n};\r\n\r\n// The reducer function receives the action object from actions.js and then checks the type. Based on the type, it performs the action to return a new state.\r\nconst reducer = (state = DEFAULT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TODO:\r\n// In redux we always return a new object, which is why we are copying the state in with ...state\r\n\t\t\treturn { ...state, items: [...state.items, action.todo] };\r\n\r\n\t\tcase POPULATE_TODOS:\r\n\t\t\treturn { ...state, items: action.todos };\r\n\r\n\t\tcase UPDATE_TODO: {\r\n\t\t\tconst itemsCopy = [...state.items];\r\n\t\t\titemsCopy[action.index] = action.todo;\r\n\t\t\treturn { ...state, items: itemsCopy };\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;","import { dispatch } from '@wordpress/data';\r\nimport { fetchTodos } from './controls';\r\nimport { populateTodos } from './actions';\r\n\r\nexport function* getTodos() {\r\n\r\n\ttry {\r\n\t\tconst todos = yield fetchTodos();\r\n\t// the code will stop after the execution of the fetchTodos() due to the yield statement, waiting for it to finish, before moving onto the return line:\r\n\r\n\t// After the fetch is completed, we have the todos. We then have to call populateTodos to call another action creator object to be created, and pass in the todos data, so the state can be updated by the reducer.\r\n\t\treturn populateTodos(todos);\r\n\t} catch (error) {\r\n\r\n\t\t// wp.data.dispatch('core/notices').createErrorNotice('error message here') -- this is how you could access the same function from the console in the editor screen. It will create an error notice at the top of the panel with your text. \r\n\t\treturn dispatch('core/notices').createErrorNotice(\r\n\t\t\terror.message || 'Could not fetch todos.'\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//The function in resolvers has to have the same name as the one in selectors.js, as it's going to handle the side-effects/API calls that the function in selectors isn't allowed to do.\r\n//with function* getTodos() - the resolver function will run whenever the selector function getTodos() runs. -- function* is a generator function. It's a function that can stop its execution at a certain point, and then can continue again later. It's useful when working with API's. \r\n\r\n//To send an API request in a resolver, we need to create controls.\r\n\r\n//The data that comes back from the API request, and is now in our custom store, can be accessed in the editor screen console with:\r\n//wp.data.select('blocks-course/todos').getTodos()","export const getTodos = (state) => {\r\n\treturn state.items;\r\n};\r\n\r\n// note that if you go into the console in the editor (with this plugin already activated) - wp.data.select('blocks-course/todos') -- now you can see the getTodos method is available.\r\n\r\n// These were added for the to-dos-list plugin: (Most of the rest of the code for this plugin was created to back up the to-dos block plugin.)\r\nexport const getTodosNumber = (state) => {\r\n\treturn state.items.length;\r\n};\r\n\r\nexport const getDoneTodos = (state) => {\r\n\treturn state.items.filter((todo) => todo.completed).length;\r\n};\r\n// In the console in the editor these could be accessed like: wp.data.select('blocks-course/todos').getDoneTodosNumber() - it will output the number of todos that are checked.\r\n\r\nexport const getUnDoneTodos = (state) => {\r\n\treturn state.items.filter((todo) => !todo.completed).length;\r\n};\r\n\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const FETCH_TODOS = 'FETCH_TODOS';\r\nexport const POPULATE_TODOS = 'POPULATE_TODOS';\r\nexport const CREATE_TODO = 'CREATE_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './todos-store';\r\nimport './plugins/sidebar';\r\nimport './format-types/highlight';\r\nimport './filters';"],"names":["addFilter","InspectorControls","PanelBody","unregisterBlockType","domReady","changeParagraphIcon","settings","name","icon","modifyEdit","BlockEdit","props","createElement","Fragment","registerFormatType","toggleFormat","RichTextToolbarButton","__","HighlightFormatButton","_ref","isActive","value","onChange","title","onClick","type","attributes","style","tagName","className","edit","registerPlugin","PluginSidebar","TextControl","useSelect","useDispatch","MetaFieldsInputs","subtitleValue","select","getEditedPostAttribute","_blocks_course_post_subtitle","editPost","label","meta","render","dispatch","ADD_TODO","POPULATE_TODOS","UPDATE_TODO","createTodo","toggleTodo","toggleTodoControl","addTodo","todo","error","createErrorNotice","message","index","updateTodo","loading","updatedTodo","populateTodos","todos","FETCH_TODOS","CREATE_TODO","TOGGLE_TODO","fetchTodos","window","fetch","then","response","ok","json","Error","method","body","JSON","stringify","completed","userId","headers","_ref2","id","createReduxStore","register","reducer","selectors","actions","resolvers","controls","store","DEFAULT_STATE","items","state","arguments","length","undefined","action","itemsCopy","getTodos","getTodosNumber","getDoneTodos","filter","getUnDoneTodos"],"sourceRoot":""}